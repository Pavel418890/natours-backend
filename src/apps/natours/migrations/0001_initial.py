# Generated by Django 4.0.1 on 2022-01-24 00:06

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.db.models.expressions
from django.conf import settings
from django.db import migrations, models

import apps.common.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(null=True, unique=True)),
                (
                    "name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Tour Name"
                    ),
                ),
                (
                    "image_cover",
                    models.ImageField(upload_to="", verbose_name="Tour Main Image"),
                ),
                (
                    "duration",
                    models.IntegerField(
                        default=1,
                        error_messages={"duration": "Max tour duration - one month."},
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                        verbose_name="Tour Duration",
                    ),
                ),
                (
                    "max_group_size",
                    models.IntegerField(default=5, verbose_name="Max Group Size"),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "easy"),
                            ("medium", "medium"),
                            ("difficult", "difficult"),
                        ],
                        default="easy",
                        max_length=10,
                        verbose_name="Tour Difficulty",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="Tour Price"
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Discount Tour Price",
                    ),
                ),
                (
                    "summary",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Tour Summary"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Tour Description"
                    ),
                ),
                (
                    "start_dates",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.DateTimeField(), default=list, size=12
                    ),
                ),
                ("secret_tour", models.BooleanField(default=False)),
                (
                    "guides",
                    models.ManyToManyField(
                        related_name="tours",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tour Guides",
                    ),
                ),
            ],
            options={
                "db_table": "NATOURS_TOURS",
            },
        ),
        migrations.CreateModel(
            name="TourImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="")),
                (
                    "tour",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="natours.tour",
                    ),
                ),
            ],
            options={
                "db_table": "NATOURS_TOUR_IMAGES",
            },
        ),
        migrations.CreateModel(
            name="StartLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Point", "point")],
                        default="Point",
                        max_length=5,
                        verbose_name="Point Type Class",
                    ),
                ),
                (
                    "coordinates",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.DecimalField(
                            decimal_places=6,
                            max_digits=10,
                            verbose_name="Coordinate point (latitude/longitude)",
                        ),
                        size=2,
                        validators=[apps.common.validators.coordinates_validator],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=500,
                        null=True,
                        verbose_name="The Tour Point Description",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        max_length=255, verbose_name="The Starting Point Address"
                    ),
                ),
                (
                    "tour",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="start_location",
                        to="natours.tour",
                        verbose_name="Tour Start Location",
                    ),
                ),
            ],
            options={
                "db_table": "TOURS_START_LOCATIONS",
            },
        ),
        migrations.CreateModel(
            name="Locations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Point", "point")],
                        default="Point",
                        max_length=5,
                        verbose_name="Point Type Class",
                    ),
                ),
                (
                    "coordinates",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.DecimalField(
                            decimal_places=6,
                            max_digits=10,
                            verbose_name="Coordinate point (latitude/longitude)",
                        ),
                        size=2,
                        validators=[apps.common.validators.coordinates_validator],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=500,
                        null=True,
                        verbose_name="The Tour Point Description",
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        error_messages={"day": "Max tour duration - one month"},
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                        verbose_name="The Tour Point Day",
                    ),
                ),
                (
                    "tour",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="natours.tour",
                        verbose_name="Tour Locations",
                    ),
                ),
            ],
            options={
                "db_table": "LOCATIONS",
            },
        ),
        migrations.AddConstraint(
            model_name="tour",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("price__gt", django.db.models.expressions.F("discount_price"))
                ),
                name="natours_tour_discount_price_lte_general_price",
            ),
        ),
    ]
