version: '3.9'

services:
  broker:
    container_name: broker
    image: rabbitmq:3-management-alpine
    restart: on-failure
    env_file:
      - .envs/.env.dev
    ports:
      - 15672:15672
    networks:
      - backend

  db:
    #    build:
    # context: ./postgres
    container_name: db
    env_file: .envs/.env.db.dev
    image: plots418890/postgres:dev
    networks:
      - backend
    ports:
      - 5432:5432
    restart: on-failure
    volumes:
      - db:/var/lib/postgresql/data


  flower:
    container_name: flower
    depends_on:
      - worker
      - broker
    entrypoint: ['/home/app/src/commands/entrypoint.flower.sh']
    env_file:
      - .envs/.env.dev
    image: plots418890/natours_backend:dev
    networks:
      - backend
    ports:
      - 5555:5555
    restart: on-failure
    volumes:
      - ./src:/home/app/src/

  resultdb:
    container_name: resultdb
    depends_on:
      - broker
      - webserver
      - worker
    entrypoint: [ 'redis-server' ]
    image: redis:7.0-rc-alpine
    networks:
      - backend
    restart: on-failure

  reverseproxy:
    container_name: reversproxy
    depends_on:
      - webserver
    image: nginx:1.21.6-alpine
    networks:
      - backend
      - frontend
    ports:
      - 8888:80
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - webserver_static:/home/app/src/static
      - webserver_media:/home/app/src/media

  webserver:
    #    build:
    #      context: .
    #      dockerfile: dev.Dockerfile
    container_name: webserver
    entrypoint: [ './commands/entrypoint.sh' ]
    env_file:
      - .envs/.env.dev
    depends_on:
      - db
      - broker
    image: plots418890/natours_backend:dev
    networks:
      - backend
    restart: on-failure
    volumes:
      - ./src:/home/app/src/
      - webserver_static:/home/app/src/static
      - webserver_media:/home/app/src/media

 
  worker:
    container_name: worker
    depends_on:
      - broker 
      - db
    entrypoint: ['/home/app/src/commands/entrypoint.celery.sh']
    env_file:
      - .envs/.env.dev
    image: plots418890/natours_backend:dev
    networks:
      - backend
    restart: on-failure
    volumes:
      - ./src:/home/app/src/

  
networks:
  backend:
    name: 'webservernet'
  frontend:
    external:
      name: 'uinet'

volumes:
  db:
  webserver_media:
  webserver_static:

